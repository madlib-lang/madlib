# Should use alpine:3.13 to get ghc 8.8.4
FROM ubuntu:20.04 as build-stage

# install ghc and cabal
RUN apt-get update
RUN apt-get install -y software-properties-common
RUN add-apt-repository -y ppa:hvr/ghc
RUN apt-get update
RUN apt-get install -y cabal-install-3.2 ghc-8.8.4
ENV PATH="/opt/cabal/bin:/opt/ghc/bin:$PATH"

# install common dependencies
RUN apt-get install -y curl llvm-9 zip wget automake libtool clang gcc-9 g++-9 libstdc++-9-dev libc++abi-9-dev

# install stack
RUN curl -sSL https://get.haskellstack.org/ | sh
ENV PATH="/root/.local/bin:$PATH"

# tell stack to use the global ghc, installing GHC with stack fails
RUN stack config set system-ghc --global true
ENV PATH="$(stack path --bin-path):$PATH"

# setup node and rollup
RUN curl -sL https://deb.nodesource.com/setup_14.x | bash -
RUN apt-get install -y nodejs
RUN npm i -g rollup @rollup/plugin-node-resolve

# run the build
COPY . .

# note: this needs to happen here as we need the resolved field from the stack.yml or else stack
# will download a new ghc version, which we want to avoid.
RUN stack install alex happy

# build runtime libs
RUN ./scripts/build-runtime-libs
RUN CPLUS_INCLUDE_PATH=/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/ ./scripts/build-runtime


RUN stack build --flag madlib:static

# build the js tools ( test-runner and package-installer )
RUN ./scripts/build

RUN cp "$(stack path --dist-dir)/build/madlib/madlib" .


FROM scratch AS export-stage
COPY --from=build-stage ./madlib /
COPY --from=build-stage ./runtime /runtime
COPY --from=build-stage ./tools/package-installer/dist/package-installer.js /package-installer.js
COPY --from=build-stage ./tools/test-runner/dist/test-runner.js /test-runner.js
