import { test, assertEquals } from "TestTools"

// Code

add :: Number -> Number -> Number
export add = (a, b) => (
  a + b
)


// Tests

test("It should fail", (x) => assertEquals(add(1, 2), 4))

test("It should work", (x) => assertEquals(add(1, 2), 3))

// t2 = TT.test("It should work", (x) => (
//   TT.assertEquals(add(1, 2), 3)
// ))

// t3 = TT.test("It should also work", (x) => (
//   W.after(2000, <1, 3>)
//     |> chain((res) => (TT.assertEquals(res, <1, 3>)))
// ))

// t4 = TT.test("It should also work for records", (x) => (
//   TT.assertEquals({ x: 3, y: { z: 3 } }, { x: 2, y: { z: 2 } })
// ))

// t5 = TT.test("It should build a map", (x) => (
//   TT.assertEquals(fromList([<1, 3>]), fromList([<1, 3>]))
// ))

// t6 = TT.test("It should insert stuff in a map", (x) => (
//   TT.assertEquals(insert("stuff", 3, empty), fromList([<"stuff", 3>]))
// ))

// t7 = TT.test("It should insert stuff in a non empty map", (x) => (
//   TT.assertEquals(insert("stuff", 3, fromList([<"stuff", 4>])), fromList([<"stuff", 3>]))
// ))

// TT.runTests([t1, t2, t3, t4, t5, t6, t7])
