Right
  AST
    { aimports = []
    , aexps =
        [ Solved
            ([] :=>
               TApp
                 (TApp
                    (TApp
                       (TCon
                          (TC "(,,)" (Kfun Star (Kfun Star (Kfun Star Star)))) "prelude")
                       (TCon (TC "Number" Star) "prelude"))
                    (TCon (TC "Number" Star) "prelude"))
                 (TCon (TC "Number" Star) "prelude"))
            (Area (Loc 0 1 1) (Loc 10 1 11))
            (TupleConstructor
               [ Solved
                   ([] :=> TCon (TC "Number" Star) "prelude")
                   (Area (Loc 2 1 3) (Loc 3 1 4))
                   (LNum "1")
               , Solved
                   ([] :=> TCon (TC "Number" Star) "prelude")
                   (Area (Loc 5 1 6) (Loc 6 1 7))
                   (LNum "2")
               , Solved
                   ([] :=> TCon (TC "Number" Star) "prelude")
                   (Area (Loc 8 1 9) (Loc 9 1 10))
                   (LNum "3")
               ])
        , Solved
            ([] :=>
               TApp
                 (TApp
                    (TApp
                       (TCon
                          (TC "(,,)" (Kfun Star (Kfun Star (Kfun Star Star)))) "prelude")
                       (TCon (TC "Boolean" Star) "prelude"))
                    (TCon (TC "String" Star) "prelude"))
                 (TCon (TC "Number" Star) "prelude"))
            (Area (Loc 11 2 1) (Loc 30 2 20))
            (TupleConstructor
               [ Solved
                   ([] :=> TCon (TC "Boolean" Star) "prelude")
                   (Area (Loc 13 2 3) (Loc 17 2 7))
                   (LBool "true")
               , Solved
                   ([] :=> TCon (TC "String" Star) "prelude")
                   (Area (Loc 19 2 9) (Loc 25 2 15))
                   (LStr "\"John\"")
               , Solved
                   ([] :=> TCon (TC "Number" Star) "prelude")
                   (Area (Loc 27 2 17) (Loc 29 2 19))
                   (LNum "33")
               ])
        ]
    , atypedecls = []
    , ainterfaces = []
    , ainstances = []
    , apath = Just "path"
    }