// file: path
export let Wish = (a => ({ __constructor: "Wish", __args: [ a ] }));
let Element = ({ __constructor: "Element", __args: [  ] });
let Event = ({ __constructor: "Event", __args: [  ] });
let AttributeId = (a => ({ __constructor: "AttributeId", __args: [ a ] }));
let AttributeClass = (a => ({ __constructor: "AttributeClass", __args: [ a ] }));
let OnClick = (a => ({ __constructor: "OnClick", __args: [ a ] }));
let OnMouseOver = (a => ({ __constructor: "OnMouseOver", __args: [ a ] }));
let OnMouseOut = (a => ({ __constructor: "OnMouseOut", __args: [ a ] }));
global.Show = {};
global.Functor = {};
Show['Number'] = {};
Show['Number']['show'] = () => (x => new Number(x).toString());
Functor['List'] = {};
Functor['List']['map'] = () => (f => xs => xs.map((x) => f(x)));
export let good = (a => Wish((_ => goodCB => goodCB(a))));
export let id = AttributeId;
export let className = AttributeClass;
export let onClick = OnClick;
export let onMouseOver = OnMouseOver;
export let onMouseOut = OnMouseOut;
export let text = (content => content);
export let div = (attrs => children => h('div', objectifyAttrs(attrs), children));
export let span = (attrs => children => h('span', objectifyAttrs(attrs), children));
export let p = (attrs => children => h('p', objectifyAttrs(attrs), children));
export let input = (attrs => children => h('input', objectifyAttrs(attrs), children));
export let button = (attrs => children => h('button', objectifyAttrs(attrs), children));
let initialState = 0;
let MyApp = (count => div(([id("id"), className("class")]))(([div(([]))(([text(`Current count is ${Show.Number.show()(count)}`)])), div(([]))(([button(([onClick((state => event => ([good((s => s + 1))])))]))(([text("increment")]))]))])));
div(([]))(([text("Some text!")]));
div(([]))(([div(([]))(([span(([]))(([]))])), div(([]))(([span(([]))(([]))]))]));
let methods = (['1', '2', '3']);
let childElems = Functor.List.map()((method => div(([]))(([text(method)]))))(methods);
div(([]))(([ ...((f) => (xs) => xs.map(f))(text)(methods)]));
div(([]))(([ ...childElems]));
export default { good, id, className, onClick, onMouseOver, onMouseOut, text, div, span, p, input, button, Wish };
