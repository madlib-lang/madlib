// file: Module.mad
import {} from "./__internals__.mjs"
import __Process__ from "./.prelude/Process.mjs";
import __Coverage__ from "./.prelude/Coverage.mjs";

let Just = (a => ({ __constructor: "Just", __args: [ a ] }));
let Nothing = ({ __constructor: "Nothing", __args: [  ] });
Inspect['Maybe_568c75136c0c369c440814a7af59434a'] = {};
Inspect['Maybe_568c75136c0c369c440814a7af59434a']['inspect'] = () => (Inspect_i5546) => (__$a__ => ((__x__) => {
  if (__x__.__constructor === "Just" && true) {
    let a0 = __x__.__args[0];
    return `Just(` + Inspect_i5546.inspect()(a0) + `)`;
  }
  else if (__x__.__constructor === "Nothing") {
    return `Nothing`;
  }
  else if (true) {
    return `Unknown`;
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})(__$a__));
Inspect['Record_carsf_0568c75136c0c369c440814a7af59434a'] = {};
Inspect['Record_carsf_0568c75136c0c369c440814a7af59434a']['inspect'] = () => (Inspect_x5561) => (__$a__ => `{ ` + `cars: ` + Inspect_x5561.inspect()(__$a__.cars) + ` }`);
Inspect['Record_namef_0568c75136c0c369c440814a7af59434a_xf_1568c75136c0c369c440814a7af59434a'] = {};
Inspect['Record_namef_0568c75136c0c369c440814a7af59434a_xf_1568c75136c0c369c440814a7af59434a']['inspect'] = () => (Inspect_q5580) => (Inspect_j5573) => (__$a__ => `{ ` + `name: ` + Inspect_j5573.inspect()(__$a__.name) + `, ` + `x: ` + Inspect_q5580.inspect()(__$a__.x) + ` }`);
let __functionTracker_123_snd__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(123)(`snd`).increment;
let __lineTracker_127__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(127).increment;
let __branchTracker_124_27_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(124)(27)(0).increment;
let __lineTracker_125__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(125).increment;
let __lineTracker_124__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(124).increment;
let __functionTracker_118_fst__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(118)(`fst`).increment;
let __branchTracker_118_26_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(118)(26)(0).increment;
let __lineTracker_119__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(119).increment;
let __lineTracker_118__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(118).increment;
let __functionTracker_115_fn2__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(115)(`fn2`).increment;
let __lineTracker_115__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(115).increment;
let __functionTracker_112_fnTCHOU__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(112)(`fnTCHOU`).increment;
let __lineTracker_112__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(112).increment;
let __functionTracker_107_addXAndY__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(107)(`addXAndY`).increment;
let __branchTracker_108_25_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(108)(25)(0).increment;
let __lineTracker_109__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(109).increment;
let __lineTracker_108__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(108).increment;
let __functionTracker_101_mapList__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(101)(`mapList`).increment;
let __branchTracker_101_24_3__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(101)(24)(3).increment;
let __lineTracker_105__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(105).increment;
let __branchTracker_101_24_2__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(101)(24)(2).increment;
let __lineTracker_104__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(104).increment;
let __branchTracker_101_24_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(101)(24)(1).increment;
let __lineTracker_103__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(103).increment;
let __branchTracker_101_24_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(101)(24)(0).increment;
let __lineTracker_102__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(102).increment;
let __lineTracker_101__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(101).increment;
let __functionTracker_96_mapMaybe__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(96)(`mapMaybe`).increment;
let __branchTracker_96_23_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(96)(23)(1).increment;
let __lineTracker_98__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(98).increment;
let __branchTracker_96_23_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(96)(23)(0).increment;
let __lineTracker_97__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(97).increment;
let __lineTracker_96__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(96).increment;
let __functionTracker_93_log__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(93)(`log`).increment;
let __lineTracker_93__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(93).increment;
let __lineTracker_89__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(89).increment;
let __lineTracker_88__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(88).increment;
let __branchTracker_84_22_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(84)(22)(0).increment;
let __lineTracker_85__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(85).increment;
let __lineTracker_84__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(84).increment;
let __lineTracker_82__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(82).increment;
let __lineTracker_80__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(80).increment;
let __branchTracker_77_21_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(77)(21)(0).increment;
let __lineTracker_78__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(78).increment;
let __lineTracker_77__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(77).increment;
let __functionTracker_76_Anonymous__5__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(76)(`Anonymous__5`).increment;
let __lineTracker_76__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(76).increment;
let __branchTracker_73_20_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(73)(20)(1).increment;
let __lineTracker_75__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(75).increment;
let __branchTracker_73_20_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(73)(20)(0).increment;
let __lineTracker_74__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(74).increment;
let __lineTracker_73__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(73).increment;
let __functionTracker_72_Anonymous__4__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(72)(`Anonymous__4`).increment;
let __lineTracker_72__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(72).increment;
let __branchTracker_69_19_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(69)(19)(1).increment;
let __lineTracker_71__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(71).increment;
let __branchTracker_69_19_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(69)(19)(0).increment;
let __lineTracker_70__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(70).increment;
let __lineTracker_69__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(69).increment;
let __branchTracker_65_18_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(65)(18)(1).increment;
let __functionTracker_67_Anonymous__3__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(67)(`Anonymous__3`).increment;
let __lineTracker_67__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(67).increment;
let __branchTracker_65_18_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(65)(18)(0).increment;
let __lineTracker_66__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(66).increment;
let __lineTracker_65__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(65).increment;
let __branchTracker_64_17_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(64)(17)(1).increment;
let __branchTracker_64_17_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(64)(17)(0).increment;
let __lineTracker_64__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(64).increment;
let __functionTracker_63_Anonymous__2__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(63)(`Anonymous__2`).increment;
let __lineTracker_63__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(63).increment;
let __functionTracker_62_Anonymous__1__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(62)(`Anonymous__1`).increment;
let __branchTracker_62_16_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(62)(16)(1).increment;
let __branchTracker_62_16_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(62)(16)(0).increment;
let __lineTracker_62__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(62).increment;
let __functionTracker_61_Anonymous__0__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(61)(`Anonymous__0`).increment;
let __lineTracker_61__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(61).increment;
let __branchTracker_60_15_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(60)(15)(1).increment;
let __branchTracker_60_15_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(60)(15)(0).increment;
let __lineTracker_60__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(60).increment;
let __branchTracker_56_14_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(56)(14)(1).increment;
let __branchTracker_56_14_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(56)(14)(0).increment;
let __lineTracker_58__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(58).increment;
let __lineTracker_57__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(57).increment;
let __lineTracker_56__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(56).increment;
let __branchTracker_49_13_4__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(49)(13)(4).increment;
let __lineTracker_54__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(54).increment;
let __branchTracker_49_13_3__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(49)(13)(3).increment;
let __lineTracker_53__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(53).increment;
let __branchTracker_49_13_2__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(49)(13)(2).increment;
let __lineTracker_52__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(52).increment;
let __branchTracker_49_13_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(49)(13)(1).increment;
let __lineTracker_51__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(51).increment;
let __branchTracker_49_13_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(49)(13)(0).increment;
let __lineTracker_50__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(50).increment;
let __lineTracker_49__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(49).increment;
let __lineTracker_48__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(48).increment;
let __lineTracker_47__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(47).increment;
let __branchTracker_46_12_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(46)(12)(1).increment;
let __branchTracker_46_12_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(46)(12)(0).increment;
let __lineTracker_46__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(46).increment;
let __branchTracker_45_11_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(45)(11)(1).increment;
let __branchTracker_45_11_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(45)(11)(0).increment;
let __lineTracker_45__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(45).increment;
let __lineTracker_44__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(44).increment;
let __lineTracker_43__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(43).increment;
let __branchTracker_42_10_2__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(42)(10)(2).increment;
let __branchTracker_42_10_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(42)(10)(1).increment;
let __branchTracker_42_10_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(42)(10)(0).increment;
let __lineTracker_42__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(42).increment;
let __lineTracker_41__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(41).increment;
let __lineTracker_40__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(40).increment;
let __branchTracker_39_9_2__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(39)(9)(2).increment;
let __branchTracker_39_9_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(39)(9)(1).increment;
let __branchTracker_39_9_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(39)(9)(0).increment;
let __lineTracker_39__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(39).increment;
let __lineTracker_38__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(38).increment;
let __lineTracker_37__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(37).increment;
let __branchTracker_36_8_2__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(36)(8)(2).increment;
let __branchTracker_36_8_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(36)(8)(1).increment;
let __branchTracker_36_8_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(36)(8)(0).increment;
let __lineTracker_36__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(36).increment;
let __branchTracker_35_7_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(35)(7)(1).increment;
let __branchTracker_35_7_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(35)(7)(0).increment;
let __lineTracker_35__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(35).increment;
let __branchTracker_34_6_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(34)(6)(1).increment;
let __branchTracker_34_6_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(34)(6)(0).increment;
let __lineTracker_34__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(34).increment;
let __branchTracker_30_5_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(30)(5)(1).increment;
let __lineTracker_32__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(32).increment;
let __branchTracker_30_5_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(30)(5)(0).increment;
let __lineTracker_31__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(31).increment;
let __lineTracker_30__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(30).increment;
let __lineTracker_29__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(29).increment;
let __branchTracker_28_4_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(28)(4)(1).increment;
let __branchTracker_28_4_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(28)(4)(0).increment;
let __lineTracker_28__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(28).increment;
let __branchTracker_25_3_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(25)(3)(0).increment;
let __lineTracker_26__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(26).increment;
let __lineTracker_25__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(25).increment;
let __branchTracker_22_2_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(22)(2)(0).increment;
let __lineTracker_23__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(23).increment;
let __lineTracker_22__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(22).increment;
let __branchTracker_19_1_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(19)(1)(0).increment;
let __lineTracker_20__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(20).increment;
let __lineTracker_19__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(19).increment;
let __branchTracker_15_0_1__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(15)(0)(1).increment;
let __lineTracker_17__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(17).increment;
let __branchTracker_15_0_0__ = __Coverage__.Reporter.branchTracker(`Module.mad`)(15)(0)(0).increment;
let __lineTracker_16__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(16).increment;
let __lineTracker_15__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(15).increment;
let __lineTracker_13__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(13).increment;
let __lineTracker_12__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(12).increment;
let __functionTracker_11_main__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(11)(`main`).increment;
let __functionTracker_9_half__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(9)(`half`).increment;
let __lineTracker_9__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(9).increment;
let __functionTracker_7_double__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(7)(`double`).increment;
let __lineTracker_7__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(7).increment;
let __functionTracker_5_dec__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(5)(`dec`).increment;
let __lineTracker_5__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(5).increment;
let __functionTracker_3_inc__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(3)(`inc`).increment;
let __lineTracker_3__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(3).increment;
let __functionTracker_1_fn__ = __Coverage__.Reporter.functionTracker(`Module.mad`)(1)(`fn`).increment;
let __lineTracker_1__ = __Coverage__.Reporter.lineTracker(`Module.mad`)(1).increment;
export let fn = (b => c => {
    __functionTracker_1_fn__(({ __constructor: "Unit", __args: [] }));
    return (b + (() => {
  __lineTracker_1__(({ __constructor: "Unit", __args: [] }))
  return c
})());
});
let inc = (x => {
    __functionTracker_3_inc__(({ __constructor: "Unit", __args: [] }));
    return (x + (() => {
  __lineTracker_3__(({ __constructor: "Unit", __args: [] }))
  return 1
})());
});
let dec = (x => {
    __functionTracker_5_dec__(({ __constructor: "Unit", __args: [] }));
    return (x - (() => {
  __lineTracker_5__(({ __constructor: "Unit", __args: [] }))
  return 1
})());
});
let double = (x => {
    __functionTracker_7_double__(({ __constructor: "Unit", __args: [] }));
    return (x * (() => {
  __lineTracker_7__(({ __constructor: "Unit", __args: [] }))
  return 2
})());
});
let half = (x => {
    __functionTracker_9_half__(({ __constructor: "Unit", __args: [] }));
    return (x / (() => {
  __lineTracker_9__(({ __constructor: "Unit", __args: [] }))
  return 2
})());
});
let main = (_ => {
    __functionTracker_11_main__(({ __constructor: "Unit", __args: [] }));
    __Process__.onExit((_ => __Coverage__.Reporter.generateReport(({ __constructor: "Unit", __args: [] }))));
    double(half((() => {
  __lineTracker_12__(({ __constructor: "Unit", __args: [] }))
  return 3
})()));
    __eq__(3, (() => {
  __lineTracker_13__(({ __constructor: "Unit", __args: [] }))
  return 5
})());
    let carResponse = ({ cars: (null) });
    ((__x__) => {
  if (true) {
    let { cars: cs } = __x__;
    return (() => {
  __branchTracker_15_0_0__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_16__(({ __constructor: "Unit", __args: [] }))
  return cs
})()
})();
  }
  else if (true) {
    return (() => {
  __branchTracker_15_0_1__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_17__(({ __constructor: "Unit", __args: [] }))
  return (null)
})()
})();
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})((() => {
  __lineTracker_15__(({ __constructor: "Unit", __args: [] }))
  return carResponse
})());
    ((__x__) => {
  if (__x__ === 3) {
    return (() => {
  __branchTracker_19_1_0__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_20__(({ __constructor: "Unit", __args: [] }))
  return 3
})()
})();
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})((() => {
  __lineTracker_19__(({ __constructor: "Unit", __args: [] }))
  return 3
})());
    ((__x__) => {
  if (__x__ === "3") {
    return (() => {
  __branchTracker_22_2_0__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_23__(({ __constructor: "Unit", __args: [] }))
  return 3
})()
})();
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})((() => {
  __lineTracker_22__(({ __constructor: "Unit", __args: [] }))
  return `3`
})());
    ((__x__) => {
  if (__x__ === true) {
    return (() => {
  __branchTracker_25_3_0__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_26__(({ __constructor: "Unit", __args: [] }))
  return 3
})()
})();
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})((() => {
  __lineTracker_25__(({ __constructor: "Unit", __args: [] }))
  return true
})());
    ((() => {
  __lineTracker_28__(({ __constructor: "Unit", __args: [] }))
  return true
})() ? (() => {
  __branchTracker_28_4_0__(({ __constructor: "Unit", __args: [] }))
  return `OK`
})() : (() => {
  __branchTracker_28_4_1__(({ __constructor: "Unit", __args: [] }))
  return `NOT OK`
})());
    let might = Just((() => {
  __lineTracker_29__(({ __constructor: "Unit", __args: [] }))
  return 3
})());
    let q = ((__x__) => {
  if (__x__.__constructor === "Just" && true) {
    let a = __x__.__args[0];
    return (() => {
  __branchTracker_30_5_0__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_31__(({ __constructor: "Unit", __args: [] }))
  return a
})()
})();
  }
  else if (__x__.__constructor === "Nothing") {
    return (() => {
  __branchTracker_30_5_1__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_32__(({ __constructor: "Unit", __args: [] }))
  return 1
})()
})();
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})((() => {
  __lineTracker_30__(({ __constructor: "Unit", __args: [] }))
  return might
})());
    (() => {
  __branchTracker_34_6_0__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_34__(({ __constructor: "Unit", __args: [] }))
  return true
})()
})() && (() => {
  __branchTracker_34_6_1__(({ __constructor: "Unit", __args: [] }))
  return false
})();
    (() => {
  __branchTracker_35_7_0__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_35__(({ __constructor: "Unit", __args: [] }))
  return false
})()
})() || (() => {
  __branchTracker_35_7_1__(({ __constructor: "Unit", __args: [] }))
  return true
})();
    (() => {
  __branchTracker_36_8_0__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_36__(({ __constructor: "Unit", __args: [] }))
  return false
})()
})() || (() => {
  __branchTracker_36_8_1__(({ __constructor: "Unit", __args: [] }))
  return true
})() && (() => {
  __branchTracker_36_8_2__(({ __constructor: "Unit", __args: [] }))
  return false
})();
    1 > (() => {
  __lineTracker_37__(({ __constructor: "Unit", __args: [] }))
  return 3
})();
    1 < (() => {
  __lineTracker_38__(({ __constructor: "Unit", __args: [] }))
  return 3
})();
    (() => {
  __branchTracker_39_9_0__(({ __constructor: "Unit", __args: [] }))
  return 1 > (() => {
  __lineTracker_39__(({ __constructor: "Unit", __args: [] }))
  return 3
})()
})() && (() => {
  __branchTracker_39_9_1__(({ __constructor: "Unit", __args: [] }))
  return 3 < 1
})() || (() => {
  __branchTracker_39_9_2__(({ __constructor: "Unit", __args: [] }))
  return true
})();
    1 >= (() => {
  __lineTracker_40__(({ __constructor: "Unit", __args: [] }))
  return 3
})();
    1 <= (() => {
  __lineTracker_41__(({ __constructor: "Unit", __args: [] }))
  return 3
})();
    (() => {
  __branchTracker_42_10_0__(({ __constructor: "Unit", __args: [] }))
  return 1 >= (() => {
  __lineTracker_42__(({ __constructor: "Unit", __args: [] }))
  return 3
})()
})() && (() => {
  __branchTracker_42_10_1__(({ __constructor: "Unit", __args: [] }))
  return 3 <= 1
})() || (() => {
  __branchTracker_42_10_2__(({ __constructor: "Unit", __args: [] }))
  return true
})();
    !((() => {
  __lineTracker_43__(({ __constructor: "Unit", __args: [] }))
  return false
})());
    !((() => {
  __lineTracker_44__(({ __constructor: "Unit", __args: [] }))
  return true
})());
    (() => {
  __branchTracker_45_11_0__(({ __constructor: "Unit", __args: [] }))
  return !((() => {
  __lineTracker_45__(({ __constructor: "Unit", __args: [] }))
  return false
})())
})() && (() => {
  __branchTracker_45_11_1__(({ __constructor: "Unit", __args: [] }))
  return !(true)
})();
    (() => {
  __branchTracker_46_12_0__(({ __constructor: "Unit", __args: [] }))
  return !((() => {
  __lineTracker_46__(({ __constructor: "Unit", __args: [] }))
  return false
})())
})() || (() => {
  __branchTracker_46_12_1__(({ __constructor: "Unit", __args: [] }))
  return !(true)
})();
    let arr = ({ v: (() => {
  __lineTracker_47__(({ __constructor: "Unit", __args: [] }))
  return 1
})(), n: { v: 2, n: { v: 3, n: null } } });
    let all = ({ v: (() => {
  __lineTracker_48__(({ __constructor: "Unit", __args: [] }))
  return 4
})(), n: { v: 5, n: { v: 6, n: arr } } });
    ((__x__) => {
  if (__x__ !== null && __x__.v === 1 && __x__.n !== null && __x__.n.v === 2 && __x__.n.n !== null && __x__.n.n.v === 3 && __x__.n.n.n === null) {
    return (() => {
  __branchTracker_49_13_0__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_50__(({ __constructor: "Unit", __args: [] }))
  return 1
})()
})();
  }
  else if (__x__ !== null && __x__.v === 1 && __x__.n !== null && __x__.n.v === 2 && __x__.n.n !== null && true && __x__.n.n.n === null) {
    let { n: { n: { v: n } } } = __x__;
    return (() => {
  __branchTracker_49_13_1__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_51__(({ __constructor: "Unit", __args: [] }))
  return n
})()
})();
  }
  else if (__x__ !== null && true && __x__.n !== null && __x__.n.v === 3 && __x__.n.n === null) {
    let { v: n,  } = __x__;
    return (() => {
  __branchTracker_49_13_2__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_52__(({ __constructor: "Unit", __args: [] }))
  return n
})()
})();
  }
  else if (__x__ !== null && true && __x__.n !== null && true && __x__.n.n !== null && true && __x__.n.n.n === null) {
    let { v: x1, n: { v: y1, n: { v: z1 } } } = __x__;
    return (() => {
  __branchTracker_49_13_3__(({ __constructor: "Unit", __args: [] }))
  return ((x1 + y1) + (() => {
  __lineTracker_53__(({ __constructor: "Unit", __args: [] }))
  return z1
})())
})();
  }
  else if (__x__ === null) {
    return (() => {
  __branchTracker_49_13_4__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_54__(({ __constructor: "Unit", __args: [] }))
  return 0
})()
})();
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})(({ v: (() => {
  __lineTracker_49__(({ __constructor: "Unit", __args: [] }))
  return 1
})(), n: { v: 2, n: { v: 3, n: { v: 5, n: { v: 8, n: null } } } } }));
    ((() => {
  __lineTracker_56__(({ __constructor: "Unit", __args: [] }))
  return true
})() ? (() => {
  __branchTracker_56_14_0__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_57__(({ __constructor: "Unit", __args: [] }))
  return `ok`
})()
})() : (() => {
  __branchTracker_56_14_1__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_58__(({ __constructor: "Unit", __args: [] }))
  return `not ok`
})()
})());
    (x => {
    __functionTracker_63_Anonymous__2__(({ __constructor: "Unit", __args: [] }));
    return (() => {
  __lineTracker_63__(({ __constructor: "Unit", __args: [] }))
  return x
})();
})((x => {
    __functionTracker_62_Anonymous__1__(({ __constructor: "Unit", __args: [] }));
    return (__eq__(x, (() => {
  __lineTracker_62__(({ __constructor: "Unit", __args: [] }))
  return `ok`
})()) ? (() => {
  __branchTracker_62_16_0__(({ __constructor: "Unit", __args: [] }))
  return 1
})() : (() => {
  __branchTracker_62_16_1__(({ __constructor: "Unit", __args: [] }))
  return 10
})());
})((x => {
    __functionTracker_61_Anonymous__0__(({ __constructor: "Unit", __args: [] }));
    return (() => {
  __lineTracker_61__(({ __constructor: "Unit", __args: [] }))
  return x
})();
})((__eq__(1, (() => {
  __lineTracker_60__(({ __constructor: "Unit", __args: [] }))
  return 2
})()) ? (() => {
  __branchTracker_60_15_0__(({ __constructor: "Unit", __args: [] }))
  return `ok`
})() : (() => {
  __branchTracker_60_15_1__(({ __constructor: "Unit", __args: [] }))
  return `not ok`
})()))));
    (__eq__(1, (() => {
  __lineTracker_64__(({ __constructor: "Unit", __args: [] }))
  return 2
})()) ? (() => {
  __branchTracker_64_17_0__(({ __constructor: "Unit", __args: [] }))
  return `ok`
})() : (() => {
  __branchTracker_64_17_1__(({ __constructor: "Unit", __args: [] }))
  return `not ok`
})());
    ((__x__) => {
  if (__x__ === 3) {
    return (() => {
  __branchTracker_65_18_0__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_66__(({ __constructor: "Unit", __args: [] }))
  return 48
})()
})();
  }
  else if (true) {
    let n = __x__;
    return (() => {
  __branchTracker_65_18_1__(({ __constructor: "Unit", __args: [] }))
  return (x => {
    __functionTracker_67_Anonymous__3__(({ __constructor: "Unit", __args: [] }));
    return (x + 1);
})((() => {
  __lineTracker_67__(({ __constructor: "Unit", __args: [] }))
  return 1
})())
})();
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})((() => {
  __lineTracker_65__(({ __constructor: "Unit", __args: [] }))
  return 3
})());
    (x => {
    __functionTracker_72_Anonymous__4__(({ __constructor: "Unit", __args: [] }));
    return (x + (() => {
  __lineTracker_72__(({ __constructor: "Unit", __args: [] }))
  return 1
})());
})(((__x__) => {
  if (__x__ === "3") {
    return (() => {
  __branchTracker_69_19_0__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_70__(({ __constructor: "Unit", __args: [] }))
  return 48
})()
})();
  }
  else if (true) {
    let n = __x__;
    return (() => {
  __branchTracker_69_19_1__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_71__(({ __constructor: "Unit", __args: [] }))
  return 1
})()
})();
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})((() => {
  __lineTracker_69__(({ __constructor: "Unit", __args: [] }))
  return `3`
})()));
    (x => {
    __functionTracker_76_Anonymous__5__(({ __constructor: "Unit", __args: [] }));
    return (() => {
  __lineTracker_76__(({ __constructor: "Unit", __args: [] }))
  return x
})();
})(((__x__) => {
  if (__x__ !== null && __x__.v === 2 && true) {
    let { n: rest } = __x__;
    return (() => {
  __branchTracker_73_20_0__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_74__(({ __constructor: "Unit", __args: [] }))
  return rest
})()
})();
  }
  else if (__x__ !== null && __x__.v === 1 && __x__.n !== null && __x__.n.v === 2 && __x__.n.n !== null && __x__.n.n.v === 3 && true) {
    let { n: { n: { n: rest } } } = __x__;
    return (() => {
  __branchTracker_73_20_1__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_75__(({ __constructor: "Unit", __args: [] }))
  return rest
})()
})();
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})(({ v: (() => {
  __lineTracker_73__(({ __constructor: "Unit", __args: [] }))
  return 1
})(), n: { v: 2, n: { v: 3, n: { v: 4, n: { v: 5, n: null } } } } })));
    ((__x__) => {
  if (__x__.name === "Bob") {
    let {  } = __x__;
    return (() => {
  __branchTracker_77_21_0__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_78__(({ __constructor: "Unit", __args: [] }))
  return `Bob`
})()
})();
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})(({ x: (() => {
  __lineTracker_77__(({ __constructor: "Unit", __args: [] }))
  return 4
})(), name: `John` }));
    let tup = ([(() => {
  __lineTracker_80__(({ __constructor: "Unit", __args: [] }))
  return 1
})(), 2, 3]);
    __eq__(([1, 2, 3]), ([(() => {
  __lineTracker_82__(({ __constructor: "Unit", __args: [] }))
  return 1
})(), 2, 3]));
    ((__x__) => {
  if (__x__.length === 2 && true && true) {
    let [a,b] = __x__;
    return (() => {
  __branchTracker_84_22_0__(({ __constructor: "Unit", __args: [] }))
  return (a + (() => {
  __lineTracker_85__(({ __constructor: "Unit", __args: [] }))
  return b
})())
})();
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})(([(() => {
  __lineTracker_84__(({ __constructor: "Unit", __args: [] }))
  return 1
})(), 2]));
    fst(([(() => {
  __lineTracker_88__(({ __constructor: "Unit", __args: [] }))
  return 1
})(), 2]));
    snd(([(() => {
  __lineTracker_89__(({ __constructor: "Unit", __args: [] }))
  return 1
})(), 2]));
    return ({ __constructor: "Unit", __args: [] });
});
let log = (a => {
    __functionTracker_93_log__(({ __constructor: "Unit", __args: [] }));
    return (() => {
  __lineTracker_93__(({ __constructor: "Unit", __args: [] }))
  return  { console.log(a); return a; } 
})();
});
let mapMaybe = (f => m => {
    __functionTracker_96_mapMaybe__(({ __constructor: "Unit", __args: [] }));
    return ((__x__) => {
  if (__x__.__constructor === "Just" && true) {
    let a = __x__.__args[0];
    return (() => {
  __branchTracker_96_23_0__(({ __constructor: "Unit", __args: [] }))
  return Just(f((() => {
  __lineTracker_97__(({ __constructor: "Unit", __args: [] }))
  return a
})()))
})();
  }
  else if (__x__.__constructor === "Nothing") {
    return (() => {
  __branchTracker_96_23_1__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_98__(({ __constructor: "Unit", __args: [] }))
  return Nothing
})()
})();
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})((() => {
  __lineTracker_96__(({ __constructor: "Unit", __args: [] }))
  return m
})());
});
export let mapList = (f => xs => {
    let $_result_;
    let $_continue_ = true;
    let $_start_ = {};
    let $_end_ = $_start_;
    let $$f = f;
    let $$xs = xs;

    while($_continue_) {
      let $f = $$f;
      let $xs = $$xs;

        $_continue_ = false;
            __functionTracker_101_mapList__(({ __constructor: "Unit", __args: [] }));
((__x__) => {
  if (__x__ !== null && true && __x__.n !== null && true && __x__.n.n !== null && true && __x__.n.n.n === null) {
    let { v: a, n: { v: b, n: { v: c } } } = __x__;
    (() => {
  __branchTracker_101_24_0__(({ __constructor: "Unit", __args: [] }))
  return ($_end_ = $_end_.n = { v: $f((() => {
  __lineTracker_102__(({ __constructor: "Unit", __args: [] }))
  return a
})()) }, $$f = $f, $$xs = ({ v: b, n: { v: c, n: null } }), $_continue_ = true)
})();
  }
  else if (__x__ !== null && true && __x__.n !== null && true && __x__.n.n === null) {
    let { v: a, n: { v: b } } = __x__;
    (() => {
  __branchTracker_101_24_1__(({ __constructor: "Unit", __args: [] }))
  return ($_end_ = $_end_.n = { v: $f((() => {
  __lineTracker_103__(({ __constructor: "Unit", __args: [] }))
  return a
})()) }, $$f = $f, $$xs = ({ v: b, n: null }), $_continue_ = true)
})();
  }
  else if (__x__ !== null && true && __x__.n === null) {
    let { v: a } = __x__;
    (() => {
  __branchTracker_101_24_2__(({ __constructor: "Unit", __args: [] }))
  return ($_end_.n = ({ v: $f((() => {
  __lineTracker_104__(({ __constructor: "Unit", __args: [] }))
  return a
})()), n: null }), $_result_ = $_start_.n)
})();
  }
  else if (__x__ === null) {
    (() => {
  __branchTracker_101_24_3__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_105__(({ __constructor: "Unit", __args: [] }))
  return ($_end_.n = (null), $_result_ = $_start_.n)
})()
})();
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})((() => {
  __lineTracker_101__(({ __constructor: "Unit", __args: [] }))
  return $xs
})())
    }
    return $_result_;
});
let addXAndY = (r => {
    __functionTracker_107_addXAndY__(({ __constructor: "Unit", __args: [] }));
    return ((__x__) => {
  if (true && true) {
    let { y: y, x: x1 } = __x__;
    return (() => {
  __branchTracker_108_25_0__(({ __constructor: "Unit", __args: [] }))
  return (x1 + (() => {
  __lineTracker_109__(({ __constructor: "Unit", __args: [] }))
  return y
})())
})();
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})((() => {
  __lineTracker_108__(({ __constructor: "Unit", __args: [] }))
  return r
})());
});
let fnTCHOU = (x => {
    __functionTracker_112_fnTCHOU__(({ __constructor: "Unit", __args: [] }));
    return (() => {
  __lineTracker_112__(({ __constructor: "Unit", __args: [] }))
  return x.a.b.c.d.e
})();
});
let fn2 = (a => {
    __functionTracker_115_fn2__(({ __constructor: "Unit", __args: [] }));
    return ([(() => {
  __lineTracker_115__(({ __constructor: "Unit", __args: [] }))
  return a
})(), a]);
});
let fst = (tuple => {
    __functionTracker_118_fst__(({ __constructor: "Unit", __args: [] }));
    return ((__x__) => {
  if (__x__.length === 2 && true && true) {
    let [a,] = __x__;
    return (() => {
  __branchTracker_118_26_0__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_119__(({ __constructor: "Unit", __args: [] }))
  return a
})()
})();
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})((() => {
  __lineTracker_118__(({ __constructor: "Unit", __args: [] }))
  return tuple
})());
});
let snd = (tuple => {
    __functionTracker_123_snd__(({ __constructor: "Unit", __args: [] }));
    let b = ((__x__) => {
  if (__x__.length === 2 && true && true) {
    let [,b1] = __x__;
    return (() => {
  __branchTracker_124_27_0__(({ __constructor: "Unit", __args: [] }))
  return (() => {
  __lineTracker_125__(({ __constructor: "Unit", __args: [] }))
  return b1
})()
})();
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})((() => {
  __lineTracker_124__(({ __constructor: "Unit", __args: [] }))
  return tuple
})());
    return (() => {
  __lineTracker_127__(({ __constructor: "Unit", __args: [] }))
  return b
})();
});
export default { fn, mapList };
const makeArgs = () => {
  let list = {}
  let start = list
  Object.keys(process.argv.slice(0)).forEach((key) => {
    list = list.n = { v: process.argv[key], n: null }
  }, {})
  return {
    n: start.n.n.n,
    v: start.n.n.v
  }
}
main(makeArgs())
