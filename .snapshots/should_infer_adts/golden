Right
  AST
    { aimports = []
    , aexps =
        [ Solved
            ([] :=> TCon (TC "Result" Star) "path")
            (Area (Loc 38 2 1) (Loc 66 2 29))
            (Assignment
               "result"
               (Solved
                  ([] :=> TCon (TC "Result" Star) "path")
                  (Area (Loc 47 2 10) (Loc 66 2 29))
                  (App
                     (Solved
                        ([] :=>
                           TApp
                             (TApp
                                (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                (TCon (TC "String" Star) "prelude"))
                             (TCon (TC "Result" Star) "path"))
                        (Area (Loc 47 2 10) (Loc 54 2 17))
                        (Var "Success"))
                     (Solved
                        ([] :=> TCon (TC "String" Star) "prelude")
                        (Area (Loc 55 2 18) (Loc 65 2 28))
                        (LStr "\"response\""))
                     True)))
        ]
    , atypedecls =
        [ Untyped
            (Area (Loc 0 1 1) (Loc 37 1 38))
            ADT
              { adtname = "Result"
              , adtparams = []
              , adtconstructors =
                  [ Untyped
                      (Area (Loc 14 1 15) (Loc 29 1 30))
                      (Constructor
                         "Success"
                         [ Untyped (Area (Loc 22 1 23) (Loc 28 1 29)) (TRSingle "String") ]
                         (TApp
                            (TApp
                               (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                               (TCon (TC "String" Star) "prelude"))
                            (TCon (TC "Result" Star) "path")))
                  , Untyped
                      (Area (Loc 32 1 33) (Loc 37 1 38))
                      (Constructor "Error" [] (TCon (TC "Result" Star) "path"))
                  ]
              , adtType = TCon (TC "Result" Star) "path"
              , adtexported = False
              }
        ]
    , ainterfaces = []
    , ainstances = []
    , apath = Just "path"
    }