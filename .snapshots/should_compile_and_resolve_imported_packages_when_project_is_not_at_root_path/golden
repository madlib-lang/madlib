// file: /root/project/madlib_modules/random/src/Main.mad
import R from "./Utils/Random.mjs";

export let Just = (a => ({ __constructor: "Just", __args: [ a ] }));
export let Nothing = ({ __constructor: "Nothing", __args: [  ] });
Inspect['Maybe'] = {};
Inspect['Maybe']['inspect'] = () => (Inspect_v21) => (__$a__ => ((__x__) => {
  if (__x__.__constructor === "Just" && true) {
    let a0 = __x__.__args[0];
    return `Just(${Inspect_v21.inspect()(a0)})`;
  }
  else if (__x__.__constructor === "Nothing") {
    return "Nothing";
  }
  else if (true) {
    return "Unknown";
  }
  else {
    console.log('non exhaustive patterns for value: ', __x__.toString()); 
    console.trace(); 
    throw 'non exhaustive patterns!';
  }
})(__$a__))
export let random = (seed => R.random(seed));
export default { random, Just, Nothing };
// file: /root/project/madlib_modules/random/src/Utils/Random.mad
export let random = (seed => seed / 2);
export default { random };
// file: /root/project/src/Main.mad
import {} from "./__internals__.mjs"
import R from "./.deps/random/src/Main.mjs";

R.random(3);
export default {};
