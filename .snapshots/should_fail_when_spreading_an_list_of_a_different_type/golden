( AST
    { aimports = []
    , aexps =
        [ Typed
            ([] :=> TVar (TV "-" Star))
            (Area (Loc 0 1 1) (Loc 19 1 20))
            (ListConstructor
               [ Typed
                   ([] :=> TVar (TV "-" Star))
                   (Area (Loc 2 1 3) (Loc 3 1 4))
                   (ListItem
                      (Typed
                         ([] :=> TVar (TV "a" Star))
                         (Area (Loc 2 1 3) (Loc 3 1 4))
                         (LNum "1")))
               , Typed
                   ([] :=> TVar (TV "-" Star))
                   (Area (Loc 5 1 6) (Loc 18 1 19))
                   (ListSpread
                      (Typed
                         ([] :=> TVar (TV "-" Star))
                         (Area (Loc 8 1 9) (Loc 18 1 19))
                         (ListConstructor
                            [ Typed
                                ([] :=> TVar (TV "-" Star))
                                (Area (Loc 9 1 10) (Loc 12 1 13))
                                (ListItem
                                   (Typed
                                      ([] :=> TCon (TC "String" Star) "prelude")
                                      (Area (Loc 9 1 10) (Loc 12 1 13))
                                      (LStr "\"1\"")))
                            , Typed
                                ([] :=> TVar (TV "-" Star))
                                (Area (Loc 14 1 15) (Loc 17 1 18))
                                (ListItem
                                   (Typed
                                      ([] :=> TCon (TC "String" Star) "prelude")
                                      (Area (Loc 14 1 15) (Loc 17 1 18))
                                      (LStr "\"2\"")))
                            ])))
               ])
        ]
    , atypedecls = []
    , ainterfaces = []
    , ainstances = []
    , apath = Just "Module.mad"
    }
, []
, [ CompilationError
      (NoInstanceFound "Number" [ TCon (TC "String" Star) "prelude" ])
      Context
        { ctxAstPath = "Module.mad"
        , ctxArea = Area (Loc 0 1 1) (Loc 19 1 20)
        }
  ]
)