( AST
    { aimports = []
    , aexps =
        [ Typed
            ([] :=> TCon (TC "Integer" Star) "prelude")
            (Area (Loc 114 9 2) (Loc 134 9 22))
            (TypedExp
               (Typed
                  ([] :=> TCon (TC "Integer" Star) "prelude")
                  (Area (Loc 114 9 2) (Loc 123 9 11))
                  (App
                     (Typed
                        ([ IsIn "Read" [ TCon (TC "Integer" Star) "prelude" ] Nothing ] :=>
                           TApp
                             (TApp
                                (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                (TCon (TC "String" Star) "prelude"))
                             (TCon (TC "Integer" Star) "prelude"))
                        (Area (Loc 114 9 2) (Loc 118 9 6))
                        (Placeholder
                           ( MethodRef "Read" "read" False
                           , [ TCon (TC "Integer" Star) "prelude" ]
                           )
                           (Typed
                              ([ IsIn "Read" [ TCon (TC "Integer" Star) "prelude" ] Nothing ] :=>
                                 TApp
                                   (TApp
                                      (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                      (TCon (TC "String" Star) "prelude"))
                                   (TCon (TC "Integer" Star) "prelude"))
                              (Area (Loc 114 9 2) (Loc 118 9 6))
                              (Var "read" False))))
                     (Typed
                        ([ IsIn
                             "Read"
                             [ TCon (TC "Integer" Star) "prelude" ]
                             (Just (Area (Loc 114 9 2) (Loc 118 9 6)))
                         ] :=>
                           TCon (TC "String" Star) "prelude")
                        (Area (Loc 119 9 7) (Loc 122 9 10))
                        (LStr "\"3\""))
                     True))
               (Untyped (Area (Loc 127 9 15) (Loc 134 9 22)) (TRSingle "Integer"))
               (Forall [] ([] :=> TCon (TC "Integer" Star) "prelude")))
        ]
    , atypedecls = []
    , ainterfaces =
        [ Untyped
            (Area (Loc 0 1 1) (Loc 42 3 2))
            (Interface
               "Read"
               []
               [ TV "a" Star ]
               (fromList
                  [ ( "read"
                    , Forall
                        [ Star ]
                        ([ IsIn "Read" [ TGen 0 ] Nothing ] :=>
                           TApp
                             (TApp
                                (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                (TCon (TC "String" Star) "prelude"))
                             (TGen 0))
                    )
                  ])
               (fromList
                  [ ( "read"
                    , Untyped
                        (Area (Loc 29 2 11) (Loc 40 2 22))
                        (TRArr
                           (Untyped (Area (Loc 29 2 11) (Loc 35 2 17)) (TRSingle "String"))
                           (Untyped (Area (Loc 39 2 21) (Loc 40 2 22)) (TRSingle "a")))
                    )
                  ]))
        ]
    , ainstances =
        [ Untyped
            (Area (Loc 44 5 1) (Loc 111 7 2))
            (Instance
               "Read"
               []
               (IsIn "Read" [ TCon (TC "Integer" Star) "prelude" ] Nothing)
               (fromList
                  [ ( "read"
                    , ( Typed
                          ([] :=>
                             TApp
                               (TApp
                                  (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                  (TCon (TC "String" Star) "prelude"))
                               (TCon (TC "Integer" Star) "prelude"))
                          (Area (Loc 70 6 3) (Loc 109 6 42))
                          (Assignment
                             "read"
                             (Typed
                                ([] :=>
                                   TApp
                                     (TApp
                                        (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                        (TCon (TC "String" Star) "prelude"))
                                     (TCon (TC "Integer" Star) "prelude"))
                                (Area (Loc 77 6 10) (Loc 109 6 42))
                                (Abs
                                   (Typed
                                      ([] :=> TCon (TC "String" Star) "prelude")
                                      (Area (Loc 78 6 11) (Loc 79 6 12))
                                      "s")
                                   [ Typed
                                       ([] :=> TCon (TC "Integer" Star) "prelude")
                                       (Area (Loc 85 6 18) (Loc 108 6 41))
                                       (JSExp " parseFloat(s, 10) ")
                                   ])))
                      , Forall
                          []
                          ([] :=>
                             TApp
                               (TApp
                                  (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                  (TCon (TC "String" Star) "prelude"))
                               (TCon (TC "Integer" Star) "prelude"))
                      )
                    )
                  ]))
        ]
    , apath = Just "Module.mad"
    }
, []
, []
)