( AST
    { aimports = []
    , aexps =
        [ Typed
            ([] :=> TVar (TV "-" Star))
            (Area (Loc 0 1 1) (Loc 11 1 12))
            (TemplateString
               [ Typed
                   ([] :=> TVar (TV "-" Star))
                   (Area (Loc 3 1 4) (Loc 8 1 9))
                   (App
                      (Typed
                         ([] :=> TVar (TV "-" Star))
                         (Area (Loc 3 1 4) (Loc 8 1 9))
                         (App
                            (Typed
                               ([] :=> TVar (TV "-" Star))
                               (Area (Loc 5 1 6) (Loc 6 1 7))
                               (Var "+" False))
                            (Typed
                               ([] :=> TVar (TV "a" Star))
                               (Area (Loc 3 1 4) (Loc 4 1 5))
                               (LNum "4"))
                            False))
                      (Typed
                         ([] :=> TVar (TV "a" Star))
                         (Area (Loc 7 1 8) (Loc 8 1 9))
                         (LNum "3"))
                      True)
               , Typed
                   ([] :=> TCon (TC "String" Star) "prelude")
                   (Area (Loc 10 1 11) (Loc 11 1 12))
                   (LStr "\"!\"")
               ])
        ]
    , atypedecls = []
    , ainterfaces = []
    , ainstances = []
    , apath = Just "Module.mad"
    }
, []
, [ CompilationError
      (NoInstanceFound "Number" [ TCon (TC "String" Star) "prelude" ])
      Context
        { ctxAstPath = "Module.mad"
        , ctxArea = Area (Loc 5 1 6) (Loc 6 1 7)
        }
  ]
)