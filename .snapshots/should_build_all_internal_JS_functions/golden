global.__eq__ = (l, r) => {
  if (l === r) {
    return true;
  }
  if (typeof l !== typeof r) {
    return false;
  }
if (l === null && r !== null || l !== null && r === null) {
  return false;
}
if (l === null && r === null) {
  return true;
}
  if (typeof l === `object`) {
    if (l.n && l.v) {
      let result = true;
      while (l !== null && result) {
        result = __eq__(l.v, r.v);
        l = l.n;
        r = r.n;
      }
      return result && r === null;
    }
    const keysL = Object.keys(l);
    const keysR = Object.keys(r);
    return keysL.length === keysR.length && keysL.reduce((res, k) => res && __eq__(l[k], r[k]), true);
  }
  return l === r;
}

const __applyMany__ = (f, params) => params.reduce((_f, param) => _f(param), f);
global.__apMtdDicts__ = (dict, dicts) =>
  Object.keys(dict).reduce((o, k) => ({ ...o, [k]: () => __applyMany__(dict[k](), dicts) }), {});

global.__once__ = (fn, context) => {

    var result;

    return function() {

        if (fn) {

            result = fn.apply(context || this, arguments);

            fn = null;

        }

        return result;

    };

}


global.__listToJSArray__ = (list) => {
  let res = []

  while (list) {
    res.push(list.v)
    list = list.n
  }

  return res
}

global.__jsArrayToList__ = (arr) => {
  let res = null

  for (let i = arr.length - 1; i >= 0; i--) {
    let head = { v: arr[i], n: res }
    res = head
  }

  return res
}

global.__listCtorSpread__ = (_spread, _next) => {
  if (_spread === null) {
    return _next
  }

  let head = { ..._spread }
  let result = head
  while (head.n !== null) {
    head = head.n
  }
  head.n = _next
  return result
}

