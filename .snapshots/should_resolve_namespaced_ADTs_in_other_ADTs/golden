Right
  (fromList
     [ ( "./ModuleA"
       , AST
           { aimports = []
           , aexps = []
           , atypedecls =
               [ Untyped
                   (Area (Loc 0 1 1) (Loc 39 1 40))
                   ADT
                     { adtname = "Maybe"
                     , adtparams = [ "a" ]
                     , adtconstructors =
                         [ Untyped
                             (Area (Loc 22 1 23) (Loc 29 1 30))
                             (Constructor
                                "Just"
                                [ Untyped (Area (Loc 27 1 28) (Loc 28 1 29)) (TRSingle "a") ]
                                (TApp
                                   (TApp
                                      (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                      (TVar (TV "a0" Star)))
                                   (TApp
                                      (TCon (TC "Maybe" (Kfun Star Star)) "./ModuleA")
                                      (TVar (TV "a0" Star)))))
                         , Untyped
                             (Area (Loc 32 1 33) (Loc 39 1 40))
                             (Constructor
                                "Nothing"
                                []
                                (TApp
                                   (TCon (TC "Maybe" (Kfun Star Star)) "./ModuleA")
                                   (TVar (TV "b1" Star))))
                         ]
                     , adtType =
                         TApp
                           (TCon (TC "Maybe" (Kfun Star Star)) "./ModuleA")
                           (TVar (TV "a" Star))
                     , adtexported = True
                     }
               ]
           , ainterfaces = []
           , ainstances = []
           , apath = Just "./ModuleA"
           }
       )
     , ( "./ModuleB"
       , AST
           { aimports =
               [ Untyped
                   (Area (Loc 0 1 1) (Loc 25 1 26))
                   (DefaultImport
                      (Untyped (Area (Loc 7 1 8) (Loc 8 1 9)) "M")
                      "./ModuleA"
                      "./ModuleA")
               ]
           , aexps =
               [ Solved
                   ([] :=> TCon (TC "MyType" Star) "./ModuleB")
                   (Area (Loc 63 3 1) (Loc 86 3 24))
                   (Assignment
                      "x"
                      (Solved
                         ([] :=> TCon (TC "MyType" Star) "./ModuleB")
                         (Area (Loc 67 3 5) (Loc 86 3 24))
                         (App
                            (Solved
                               ([] :=>
                                  TApp
                                    (TApp
                                       (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                       (TApp
                                          (TCon (TC "Maybe" (Kfun Star Star)) "./ModuleA")
                                          (TCon (TC "String" Star) "prelude")))
                                    (TCon (TC "MyType" Star) "./ModuleB"))
                               (Area (Loc 67 3 5) (Loc 73 3 11))
                               (Var "MyType"))
                            (Solved
                               ([] :=>
                                  TApp
                                    (TCon (TC "Maybe" (Kfun Star Star)) "./ModuleA")
                                    (TCon (TC "String" Star) "prelude"))
                               (Area (Loc 74 3 12) (Loc 85 3 23))
                               (App
                                  (Solved
                                     ([] :=>
                                        TApp
                                          (TApp
                                             (TCon
                                                (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                             (TVar (TV "f5" Star)))
                                          (TApp
                                             (TCon (TC "Maybe" (Kfun Star Star)) "./ModuleA")
                                             (TVar (TV "f5" Star))))
                                     (Area (Loc 74 3 12) (Loc 80 3 18))
                                     (Var "M.Just"))
                                  (Solved
                                     ([] :=> TCon (TC "String" Star) "prelude")
                                     (Area (Loc 81 3 19) (Loc 84 3 22))
                                     (LStr "\"3\""))
                                  True))
                            True)))
               ]
           , atypedecls =
               [ Untyped
                   (Area (Loc 26 2 1) (Loc 62 2 37))
                   ADT
                     { adtname = "MyType"
                     , adtparams = []
                     , adtconstructors =
                         [ Untyped
                             (Area (Loc 40 2 15) (Loc 62 2 37))
                             (Constructor
                                "MyType"
                                [ Untyped
                                    (Area (Loc 47 2 22) (Loc 61 2 36))
                                    (TRComp
                                       "M.Maybe"
                                       [ Untyped
                                           (Area (Loc 55 2 30) (Loc 61 2 36)) (TRSingle "String")
                                       ])
                                ]
                                (TApp
                                   (TApp
                                      (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                      (TApp
                                         (TCon (TC "Maybe" (Kfun Star Star)) "./ModuleA")
                                         (TCon (TC "String" Star) "prelude")))
                                   (TCon (TC "MyType" Star) "./ModuleB")))
                         ]
                     , adtType = TCon (TC "MyType" Star) "./ModuleB"
                     , adtexported = False
                     }
               ]
           , ainterfaces = []
           , ainstances = []
           , apath = Just "./ModuleB"
           }
       )
     ])