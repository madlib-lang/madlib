( AST
    { aimports = []
    , aexps =
        [ Typed
            ([] :=> TCon (TC "Boolean" Star) "prelude")
            (Area (Loc 0 1 1) (Loc 6 1 7))
            (App
               (Typed
                  ([] :=>
                     TApp
                       (TApp
                          (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                          (TCon (TC "Boolean" Star) "prelude"))
                       (TCon (TC "Boolean" Star) "prelude"))
                  (Area (Loc 0 1 1) (Loc 1 1 2))
                  (Var "!" False))
               (Typed
                  ([] :=> TCon (TC "Boolean" Star) "prelude")
                  (Area (Loc 1 1 2) (Loc 6 1 7))
                  (LBool "false"))
               True)
        ]
    , atypedecls = []
    , ainterfaces = []
    , ainstances = []
    , apath = Just "Module.mad"
    }
, []
, []
)