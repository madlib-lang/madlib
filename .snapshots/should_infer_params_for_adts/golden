Right
  AST
    { aimports = []
    , aexps =
        [ Solved
            (TApp
               (TApp
                  (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                  (TRecord
                     (fromList [ ( "value" , TCon (TC "String" Star) ) ]) False))
               (TCon (TC "Result" Star)))
            (Area (Loc 42 2 1) (Loc 53 2 12))
            (Assignment
               "r"
               (Solved
                  (TApp
                     (TApp
                        (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                        (TRecord
                           (fromList [ ( "value" , TCon (TC "String" Star) ) ]) False))
                     (TCon (TC "Result" Star)))
                  (Area (Loc 46 2 5) (Loc 53 2 12))
                  (Var "Success")))
        , Solved
            (TRecord
               (fromList [ ( "value" , TCon (TC "String" Star) ) ]) False)
            (Area (Loc 54 2 13) (Loc 69 2 28))
            (Record
               [ Field
                   ( "value"
                   , Solved
                       (TCon (TC "String" Star))
                       (Area (Loc 63 2 22) (Loc 67 2 26))
                       (LStr "42")
                   )
               ])
        , Solved
            (TApp
               (TApp
                  (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                  (TRecord
                     (fromList [ ( "value" , TCon (TC "String" Star) ) ]) False))
               (TCon (TC "Result" Star)))
            (Area (Loc 70 3 1) (Loc 85 3 16))
            (App
               (Solved
                  (TApp
                     (TApp
                        (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                        (TApp
                           (TApp
                              (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                              (TRecord
                                 (fromList [ ( "value" , TCon (TC "String" Star) ) ]) False))
                           (TCon (TC "Result" Star))))
                     (TApp
                        (TApp
                           (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                           (TRecord
                              (fromList [ ( "value" , TCon (TC "String" Star) ) ]) False))
                        (TCon (TC "Result" Star))))
                  (Area (Loc 71 3 2) (Loc 81 3 12))
                  (Abs
                     (Solved
                        (TApp
                           (TApp
                              (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                              (TRecord
                                 (fromList [ ( "value" , TCon (TC "String" Star) ) ]) False))
                           (TCon (TC "Result" Star)))
                        (Area (Loc 72 3 3) (Loc 73 3 4))
                        "a")
                     [ Solved
                         (TApp
                            (TApp
                               (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                               (TRecord
                                  (fromList [ ( "value" , TCon (TC "String" Star) ) ]) False))
                            (TCon (TC "Result" Star)))
                         (Area (Loc 79 3 10) (Loc 80 3 11))
                         (Var "a")
                     ]))
               (Solved
                  (TApp
                     (TApp
                        (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                        (TRecord
                           (fromList [ ( "value" , TCon (TC "String" Star) ) ]) False))
                     (TCon (TC "Result" Star)))
                  (Area (Loc 83 3 14) (Loc 84 3 15))
                  (Var "r"))
               True)
        ]
    , atypedecls =
        [ ADT
            { adtname = "Result"
            , adtparams = []
            , adtconstructors =
                [ Constructor
                    "Success"
                    [ TRRecord (fromList [ ( "value" , TRSingle "String" ) ]) ]
                ]
            , adtexported = False
            }
        ]
    , ainterfaces = []
    , ainstances = []
    , apath = Just "path"
    }