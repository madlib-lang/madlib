// file: /madlib_modules/math/src/Main.mad
import {} from "./../../../__internals__.mjs"
export let avg = (a => b => ((a + b) / 2));
export default { avg };
// file: /madlib_modules/random/src/Main.mad
import {} from "./../../../__internals__.mjs"
import R from "./Utils/Random.mjs";
import M from "./../../math/src/Main.mjs";

export let random = (seed => (R.random(seed) + M.avg(seed)(seed)));
export default { random };
// file: /madlib_modules/random/src/Utils/Random.mad
import {} from "./../../../../__internals__.mjs"
export let random = (seed => (seed / 2));
export default { random };
// file: /src/Main.mad
import {} from "./../__internals__.mjs"
import R from "./../madlib_modules/random/src/Main.mjs";

let main = (_ => {
    R.random(3);
    return ({ __constructor: "Unit", __args: [] });
});
export default {};
const makeArgs = () => {
  let list = {}
  let start = list
  Object.keys(process.argv.slice(0)).forEach((key) => {
    list = list.n = { v: process.argv[key], n: null }
  }, {})
  return {
    n: start.n.n.n,
    v: start.n.n.v
  }
}
main(makeArgs())
