( AST
    { aimports =
        [ Untyped
            (Area (Loc 0 0 0) (Loc 0 0 0))
            (DefaultImport
               (Untyped (Area (Loc 0 0 0) (Loc 0 0 0)) "__BUILTINS__")
               "__BUILTINS__"
               "__BUILTINS__")
        ]
    , aexps =
        [ Typed
            ([] :=>
               TApp
                 (TApp
                    (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                    (TApp
                       (TCon (TC "List" (Kfun Star Star)) "prelude")
                       (TCon (TC "String" Star) "prelude")))
                 (TCon (TC "{}" Star) "prelude"))
            (Area (Loc 11 2 1) (Loc 40 2 30))
            (TypedExp
               (Typed
                  ([] :=>
                     TApp
                       (TApp
                          (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                          (TApp
                             (TCon (TC "List" (Kfun Star Star)) "prelude")
                             (TCon (TC "String" Star) "prelude")))
                       (TCon (TC "{}" Star) "prelude"))
                  (Area (Loc 11 2 1) (Loc 40 2 30))
                  (Assignment
                     "main"
                     (Typed
                        ([] :=>
                           TApp
                             (TApp
                                (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                (TApp
                                   (TCon (TC "List" (Kfun Star Star)) "prelude")
                                   (TCon (TC "String" Star) "prelude")))
                             (TCon (TC "{}" Star) "prelude"))
                        (Area (Loc 18 2 8) (Loc 40 2 30))
                        (Abs
                           (Typed
                              ([] :=>
                                 TApp
                                   (TCon (TC "List" (Kfun Star Star)) "prelude")
                                   (TCon (TC "String" Star) "prelude"))
                              (Area (Loc 39 2 29) (Loc 39 2 29))
                              "_")
                           [ Typed
                               ([] :=> TCon (TC "X" Star) "Module.mad")
                               (Area (Loc 26 2 16) (Loc 37 2 27))
                               (Assignment
                                  "x"
                                  (Typed
                                     ([] :=> TCon (TC "X" Star) "Module.mad")
                                     (Area (Loc 31 2 21) (Loc 37 2 27))
                                     (TypedExp
                                        (Typed
                                           ([] :=> TCon (TC "X" Star) "Module.mad")
                                           (Area (Loc 31 2 21) (Loc 32 2 22))
                                           (Var "X" True))
                                        (Untyped (Area (Loc 36 2 26) (Loc 37 2 27)) (TRSingle "X"))
                                        (Forall [] ([] :=> TCon (TC "X" Star) "Module.mad")))))
                           , Typed
                               ([] :=> TCon (TC "{}" Star) "prelude")
                               (Area (Loc 0 0 0) (Loc 0 0 0))
                               LUnit
                           ]))))
               (Untyped
                  (Area (Loc 0 0 0) (Loc 0 0 0))
                  (TRArr
                     (Untyped
                        (Area (Loc 0 0 0) (Loc 0 0 0))
                        (TRComp
                           "List"
                           [ Untyped (Area (Loc 0 0 0) (Loc 0 0 0)) (TRSingle "String") ]))
                     (Untyped (Area (Loc 0 0 0) (Loc 0 0 0)) (TRSingle "{}"))))
               (Forall
                  []
                  ([] :=>
                     TApp
                       (TApp
                          (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                          (TApp
                             (TCon (TC "List" (Kfun Star Star)) "prelude")
                             (TCon (TC "String" Star) "prelude")))
                       (TCon (TC "{}" Star) "prelude"))))
        ]
    , atypedecls =
        [ Untyped
            (Area (Loc 0 1 1) (Loc 10 1 11))
            ADT
              { adtname = "X"
              , adtparams = []
              , adtconstructors =
                  [ Untyped
                      (Area (Loc 9 1 10) (Loc 10 1 11))
                      (Constructor "X" [] (TCon (TC "X" Star) "Module.mad"))
                  ]
              , adtType = TCon (TC "X" Star) "Module.mad"
              , adtexported = False
              }
        ]
    , ainterfaces = []
    , ainstances =
        [ Untyped
            (Area (Loc 0 0 0) (Loc 0 0 0))
            (Instance
               "Eq"
               []
               (IsIn "Eq" [ TCon (TC "X" Star) "Module.mad" ] Nothing)
               (fromList
                  [ ( "=="
                    , ( Typed
                          ([] :=>
                             TApp
                               (TApp
                                  (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                  (TCon (TC "X" Star) "Module.mad"))
                               (TApp
                                  (TApp
                                     (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                     (TCon (TC "X" Star) "Module.mad"))
                                  (TCon (TC "Boolean" Star) "prelude")))
                          (Area (Loc 0 0 0) (Loc 0 0 0))
                          (Assignment
                             "=="
                             (Typed
                                ([] :=>
                                   TApp
                                     (TApp
                                        (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                        (TCon (TC "X" Star) "Module.mad"))
                                     (TApp
                                        (TApp
                                           (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                           (TCon (TC "X" Star) "Module.mad"))
                                        (TCon (TC "Boolean" Star) "prelude")))
                                (Area (Loc 0 0 0) (Loc 0 0 0))
                                (Abs
                                   (Typed
                                      ([] :=> TCon (TC "X" Star) "Module.mad")
                                      (Area (Loc 0 0 0) (Loc 0 0 0))
                                      "__$a__")
                                   [ Typed
                                       ([] :=>
                                          TApp
                                            (TApp
                                               (TCon
                                                  (TC "(->)" (Kfun Star (Kfun Star Star)))
                                                  "prelude")
                                               (TCon (TC "X" Star) "Module.mad"))
                                            (TCon (TC "Boolean" Star) "prelude"))
                                       (Area (Loc 0 0 0) (Loc 0 0 0))
                                       (Abs
                                          (Typed
                                             ([] :=> TCon (TC "X" Star) "Module.mad")
                                             (Area (Loc 0 0 0) (Loc 0 0 0))
                                             "__$b__")
                                          [ Typed
                                              ([] :=> TCon (TC "Boolean" Star) "prelude")
                                              (Area (Loc 0 0 0) (Loc 0 0 0))
                                              (Where
                                                 (Typed
                                                    ([] :=>
                                                       TApp
                                                         (TApp
                                                            (TCon
                                                               (TC
                                                                  "(,)"
                                                                  (Kfun Star (Kfun Star Star)))
                                                               "prelude")
                                                            (TCon (TC "X" Star) "Module.mad"))
                                                         (TCon (TC "X" Star) "Module.mad"))
                                                    (Area (Loc 0 0 0) (Loc 0 0 0))
                                                    (TupleConstructor
                                                       [ Typed
                                                           ([] :=> TCon (TC "X" Star) "Module.mad")
                                                           (Area (Loc 0 0 0) (Loc 0 0 0))
                                                           (Var "__$a__" False)
                                                       , Typed
                                                           ([] :=> TCon (TC "X" Star) "Module.mad")
                                                           (Area (Loc 0 0 0) (Loc 0 0 0))
                                                           (Var "__$b__" False)
                                                       ]))
                                                 [ Typed
                                                     ([] :=>
                                                        TApp
                                                          (TApp
                                                             (TCon
                                                                (TC
                                                                   "(->)"
                                                                   (Kfun Star (Kfun Star Star)))
                                                                "prelude")
                                                             (TApp
                                                                (TApp
                                                                   (TCon
                                                                      (TC
                                                                         "(,)"
                                                                         (Kfun
                                                                            Star (Kfun Star Star)))
                                                                      "prelude")
                                                                   (TCon
                                                                      (TC "X" Star) "Module.mad"))
                                                                (TCon (TC "X" Star) "Module.mad")))
                                                          (TCon (TC "Boolean" Star) "prelude"))
                                                     (Area (Loc 0 0 0) (Loc 0 0 0))
                                                     (Is
                                                        (Typed
                                                           ([] :=>
                                                              TApp
                                                                (TApp
                                                                   (TCon
                                                                      (TC
                                                                         "(,)"
                                                                         (Kfun
                                                                            Star (Kfun Star Star)))
                                                                      "prelude")
                                                                   (TCon
                                                                      (TC "X" Star) "Module.mad"))
                                                                (TCon (TC "X" Star) "Module.mad"))
                                                           (Area (Loc 0 0 0) (Loc 0 0 0))
                                                           (PTuple
                                                              [ Typed
                                                                  ([] :=>
                                                                     TCon
                                                                       (TC "X" Star) "Module.mad")
                                                                  (Area (Loc 0 0 0) (Loc 0 0 0))
                                                                  (PCon "X" [])
                                                              , Typed
                                                                  ([] :=>
                                                                     TCon
                                                                       (TC "X" Star) "Module.mad")
                                                                  (Area (Loc 0 0 0) (Loc 0 0 0))
                                                                  (PCon "X" [])
                                                              ]))
                                                        (Typed
                                                           ([] :=>
                                                              TCon (TC "Boolean" Star) "prelude")
                                                           (Area (Loc 0 0 0) (Loc 0 0 0))
                                                           (LBool "true")))
                                                 , Typed
                                                     ([] :=>
                                                        TApp
                                                          (TApp
                                                             (TCon
                                                                (TC
                                                                   "(->)"
                                                                   (Kfun Star (Kfun Star Star)))
                                                                "prelude")
                                                             (TApp
                                                                (TApp
                                                                   (TCon
                                                                      (TC
                                                                         "(,)"
                                                                         (Kfun
                                                                            Star (Kfun Star Star)))
                                                                      "prelude")
                                                                   (TCon
                                                                      (TC "X" Star) "Module.mad"))
                                                                (TCon (TC "X" Star) "Module.mad")))
                                                          (TCon (TC "Boolean" Star) "prelude"))
                                                     (Area (Loc 0 0 0) (Loc 0 0 0))
                                                     (Is
                                                        (Typed
                                                           ([] :=>
                                                              TApp
                                                                (TApp
                                                                   (TCon
                                                                      (TC
                                                                         "(,)"
                                                                         (Kfun
                                                                            Star (Kfun Star Star)))
                                                                      "prelude")
                                                                   (TCon
                                                                      (TC "X" Star) "Module.mad"))
                                                                (TCon (TC "X" Star) "Module.mad"))
                                                           (Area (Loc 0 0 0) (Loc 0 0 0))
                                                           PAny)
                                                        (Typed
                                                           ([] :=>
                                                              TCon (TC "Boolean" Star) "prelude")
                                                           (Area (Loc 0 0 0) (Loc 0 0 0))
                                                           (LBool "false")))
                                                 ])
                                          ])
                                   ])))
                      , Forall
                          []
                          ([] :=>
                             TApp
                               (TApp
                                  (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                  (TCon (TC "X" Star) "Module.mad"))
                               (TApp
                                  (TApp
                                     (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                     (TCon (TC "X" Star) "Module.mad"))
                                  (TCon (TC "Boolean" Star) "prelude")))
                      )
                    )
                  ]))
        , Untyped
            (Area (Loc 0 0 0) (Loc 0 0 0))
            (Instance
               "Show"
               []
               (IsIn "Show" [ TCon (TC "X" Star) "Module.mad" ] Nothing)
               (fromList
                  [ ( "show"
                    , ( Typed
                          ([] :=>
                             TApp
                               (TApp
                                  (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                  (TCon (TC "X" Star) "Module.mad"))
                               (TCon (TC "String" Star) "prelude"))
                          (Area (Loc 0 0 0) (Loc 0 0 0))
                          (Assignment
                             "show"
                             (Typed
                                ([] :=>
                                   TApp
                                     (TApp
                                        (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                        (TCon (TC "X" Star) "Module.mad"))
                                     (TCon (TC "String" Star) "prelude"))
                                (Area (Loc 0 0 0) (Loc 0 0 0))
                                (Abs
                                   (Typed
                                      ([] :=> TCon (TC "X" Star) "Module.mad")
                                      (Area (Loc 0 0 0) (Loc 0 0 0))
                                      "__$a__")
                                   [ Typed
                                       ([] :=> TCon (TC "String" Star) "prelude")
                                       (Area (Loc 0 0 0) (Loc 0 0 0))
                                       (Where
                                          (Typed
                                             ([] :=> TCon (TC "X" Star) "Module.mad")
                                             (Area (Loc 0 0 0) (Loc 0 0 0))
                                             (Var "__$a__" False))
                                          [ Typed
                                              ([] :=>
                                                 TApp
                                                   (TApp
                                                      (TCon
                                                         (TC "(->)" (Kfun Star (Kfun Star Star)))
                                                         "prelude")
                                                      (TCon (TC "X" Star) "Module.mad"))
                                                   (TCon (TC "String" Star) "prelude"))
                                              (Area (Loc 0 0 0) (Loc 0 0 0))
                                              (Is
                                                 (Typed
                                                    ([] :=> TCon (TC "X" Star) "Module.mad")
                                                    (Area (Loc 0 0 0) (Loc 0 0 0))
                                                    (PCon "X" []))
                                                 (Typed
                                                    ([] :=> TCon (TC "String" Star) "prelude")
                                                    (Area (Loc 0 0 0) (Loc 0 0 0))
                                                    (LStr "X")))
                                          , Typed
                                              ([] :=>
                                                 TApp
                                                   (TApp
                                                      (TCon
                                                         (TC "(->)" (Kfun Star (Kfun Star Star)))
                                                         "prelude")
                                                      (TCon (TC "X" Star) "Module.mad"))
                                                   (TCon (TC "String" Star) "prelude"))
                                              (Area (Loc 0 0 0) (Loc 0 0 0))
                                              (Is
                                                 (Typed
                                                    ([] :=> TCon (TC "X" Star) "Module.mad")
                                                    (Area (Loc 0 0 0) (Loc 0 0 0))
                                                    PAny)
                                                 (Typed
                                                    ([] :=> TCon (TC "String" Star) "prelude")
                                                    (Area (Loc 0 0 0) (Loc 0 0 0))
                                                    (LStr "Unknown")))
                                          ])
                                   ])))
                      , Forall
                          []
                          ([] :=>
                             TApp
                               (TApp
                                  (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                  (TCon (TC "X" Star) "Module.mad"))
                               (TCon (TC "String" Star) "prelude"))
                      )
                    )
                  ]))
        ]
    , apath = Just "Module.mad"
    }
, [ CompilationWarning
      (UnusedDeclaration "x")
      Context
        { ctxAstPath = "Module.mad"
        , ctxArea = Area (Loc 26 2 16) (Loc 27 2 17)
        }
  ]
, []
)