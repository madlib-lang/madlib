( fromList
    [ ( "./ModuleA.mad"
      , AST
          { aimports =
              [ Untyped
                  (Area (Loc 0 0 0) (Loc 0 0 0))
                  (DefaultImport
                     (Untyped (Area (Loc 0 0 0) (Loc 0 0 0)) "__BUILTINS__")
                     "__BUILTINS__"
                     "__BUILTINS__")
              ]
          , aexps =
              [ Typed
                  ([] :=>
                     TApp
                       (TApp
                          (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                          (TVar (TV 1 Star)))
                       (TApp
                          (TCon (TC "List" (Kfun Star Star)) "prelude") (TVar (TV 1 Star))))
                  (Area (Loc 0 1 1) (Loc 31 1 32))
                  (Export
                     (Typed
                        ([] :=>
                           TApp
                             (TApp
                                (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                (TVar (TV 1 Star)))
                             (TApp
                                (TCon (TC "List" (Kfun Star Star)) "prelude") (TVar (TV 1 Star))))
                        (Area (Loc 0 1 1) (Loc 31 1 32))
                        (Assignment
                           "singleton"
                           (Typed
                              ([] :=>
                                 TApp
                                   (TApp
                                      (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                      (TVar (TV 1 Star)))
                                   (TApp
                                      (TCon (TC "List" (Kfun Star Star)) "prelude")
                                      (TVar (TV 1 Star))))
                              (Area (Loc 19 1 20) (Loc 31 1 32))
                              (Abs
                                 (Typed
                                    ([] :=> TVar (TV 1 Star))
                                    (Area (Loc 20 1 21) (Loc 21 1 22))
                                    "a")
                                 [ Typed
                                     ([] :=>
                                        TApp
                                          (TCon (TC "List" (Kfun Star Star)) "prelude")
                                          (TVar (TV 1 Star)))
                                     (Area (Loc 27 1 28) (Loc 30 1 31))
                                     (ListConstructor
                                        [ Typed
                                            ([] :=> TVar (TV 1 Star))
                                            (Area (Loc 28 1 29) (Loc 29 1 30))
                                            (ListItem
                                               (Typed
                                                  ([] :=> TVar (TV 1 Star))
                                                  (Area (Loc 28 1 29) (Loc 29 1 30))
                                                  (Var "a" False)))
                                        ])
                                 ])))))
              ]
          , atypedecls = []
          , ainterfaces = []
          , ainstances = []
          , apath = Just "./ModuleA.mad"
          }
      )
    , ( "./ModuleB.mad"
      , AST
          { aimports =
              [ Untyped
                  (Area (Loc 0 0 0) (Loc 0 0 0))
                  (DefaultImport
                     (Untyped (Area (Loc 0 0 0) (Loc 0 0 0)) "__BUILTINS__")
                     "__BUILTINS__"
                     "__BUILTINS__")
              , Untyped
                  (Area (Loc 0 1 1) (Loc 25 1 26))
                  (DefaultImport
                     (Untyped (Area (Loc 7 1 8) (Loc 8 1 9)) "L")
                     "./ModuleA"
                     "./ModuleA.mad")
              ]
          , aexps =
              [ Typed
                  ([] :=>
                     TApp
                       (TApp
                          (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                          (TApp
                             (TCon (TC "List" (Kfun Star Star)) "prelude")
                             (TCon (TC "String" Star) "prelude")))
                       (TCon (TC "{}" Star) "prelude"))
                  (Area (Loc 26 2 1) (Loc 57 2 32))
                  (TypedExp
                     (Typed
                        ([] :=>
                           TApp
                             (TApp
                                (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                (TApp
                                   (TCon (TC "List" (Kfun Star Star)) "prelude")
                                   (TCon (TC "String" Star) "prelude")))
                             (TCon (TC "{}" Star) "prelude"))
                        (Area (Loc 26 2 1) (Loc 57 2 32))
                        (Assignment
                           "main"
                           (Typed
                              ([] :=>
                                 TApp
                                   (TApp
                                      (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                      (TApp
                                         (TCon (TC "List" (Kfun Star Star)) "prelude")
                                         (TCon (TC "String" Star) "prelude")))
                                   (TCon (TC "{}" Star) "prelude"))
                              (Area (Loc 33 2 8) (Loc 57 2 32))
                              (Abs
                                 (Typed
                                    ([] :=>
                                       TApp
                                         (TCon (TC "List" (Kfun Star Star)) "prelude")
                                         (TCon (TC "String" Star) "prelude"))
                                    (Area (Loc 56 2 31) (Loc 56 2 31))
                                    "_")
                                 [ Typed
                                     ([] :=>
                                        TApp
                                          (TCon (TC "List" (Kfun Star Star)) "prelude")
                                          (TCon (TC "Integer" Star) "prelude"))
                                     (Area (Loc 41 2 16) (Loc 55 2 30))
                                     (App
                                        (Typed
                                           ([] :=>
                                              TApp
                                                (TApp
                                                   (TCon
                                                      (TC "(->)" (Kfun Star (Kfun Star Star)))
                                                      "prelude")
                                                   (TCon (TC "Integer" Star) "prelude"))
                                                (TApp
                                                   (TCon (TC "List" (Kfun Star Star)) "prelude")
                                                   (TCon (TC "Integer" Star) "prelude")))
                                           (Area (Loc 41 2 16) (Loc 52 2 27))
                                           (Var "L.singleton" False))
                                        (Typed
                                           ([ IsIn
                                                "Number"
                                                [ TCon (TC "Integer" Star) "prelude" ]
                                                Nothing
                                            ] :=>
                                              TCon (TC "Integer" Star) "prelude")
                                           (Area (Loc 53 2 28) (Loc 54 2 29))
                                           (LNum "3"))
                                        True)
                                 , Typed
                                     ([] :=> TCon (TC "{}" Star) "prelude")
                                     (Area (Loc 0 0 0) (Loc 0 0 0))
                                     LUnit
                                 ]))))
                     (Untyped
                        (Area (Loc 0 0 0) (Loc 0 0 0))
                        (TRArr
                           (Untyped
                              (Area (Loc 0 0 0) (Loc 0 0 0))
                              (TRComp
                                 "List"
                                 [ Untyped (Area (Loc 0 0 0) (Loc 0 0 0)) (TRSingle "String") ]))
                           (Untyped (Area (Loc 0 0 0) (Loc 0 0 0)) (TRSingle "{}"))))
                     (Forall
                        []
                        ([] :=>
                           TApp
                             (TApp
                                (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                (TApp
                                   (TCon (TC "List" (Kfun Star Star)) "prelude")
                                   (TCon (TC "String" Star) "prelude")))
                             (TCon (TC "{}" Star) "prelude"))))
              ]
          , atypedecls = []
          , ainterfaces = []
          , ainstances = []
          , apath = Just "./ModuleB.mad"
          }
      )
    ]
, []
, []
)