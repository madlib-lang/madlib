Right
  AST
    { aimports = []
    , aexps =
        [ Solved
            ([] :=> TCon (TC "Boolean" Star) "prelude")
            (Area (Loc 0 1 1) (Loc 6 1 7))
            (App
               (Solved
                  ([ IsIn
                       "Number"
                       [ TCon (TC "Integer" Star) "prelude" ]
                       (Just (Area (Loc 2 1 3) (Loc 4 1 5)))
                   , IsIn "Number" [ TCon (TC "Integer" Star) "prelude" ] Nothing
                   ] :=>
                     TApp
                       (TApp
                          (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                          (TCon (TC "Integer" Star) "prelude"))
                       (TCon (TC "Boolean" Star) "prelude"))
                  (Area (Loc 0 1 1) (Loc 6 1 7))
                  (App
                     (Solved
                        ([ IsIn "Number" [ TCon (TC "Integer" Star) "prelude" ] Nothing
                         ] :=>
                           TApp
                             (TApp
                                (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                (TCon (TC "Integer" Star) "prelude"))
                             (TApp
                                (TApp
                                   (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                   (TCon (TC "Integer" Star) "prelude"))
                                (TCon (TC "Boolean" Star) "prelude")))
                        (Area (Loc 2 1 3) (Loc 4 1 5))
                        (Placeholder
                           ( MethodRef "Number" ">=" False
                           , [ TCon (TC "Integer" Star) "prelude" ]
                           )
                           (Solved
                              ([ IsIn "Number" [ TCon (TC "Integer" Star) "prelude" ] Nothing
                               ] :=>
                                 TApp
                                   (TApp
                                      (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                      (TCon (TC "Integer" Star) "prelude"))
                                   (TApp
                                      (TApp
                                         (TCon (TC "(->)" (Kfun Star (Kfun Star Star))) "prelude")
                                         (TCon (TC "Integer" Star) "prelude"))
                                      (TCon (TC "Boolean" Star) "prelude")))
                              (Area (Loc 2 1 3) (Loc 4 1 5))
                              (Var ">="))))
                     (Solved
                        ([ IsIn
                             "Number"
                             [ TCon (TC "Integer" Star) "prelude" ]
                             (Just (Area (Loc 2 1 3) (Loc 4 1 5)))
                         , IsIn "Number" [ TCon (TC "Integer" Star) "prelude" ] Nothing
                         ] :=>
                           TCon (TC "Integer" Star) "prelude")
                        (Area (Loc 0 1 1) (Loc 1 1 2))
                        (LNum "1"))
                     False))
               (Solved
                  ([ IsIn
                       "Number"
                       [ TCon (TC "Integer" Star) "prelude" ]
                       (Just (Area (Loc 2 1 3) (Loc 4 1 5)))
                   , IsIn "Number" [ TCon (TC "Integer" Star) "prelude" ] Nothing
                   , IsIn "Number" [ TCon (TC "Integer" Star) "prelude" ] Nothing
                   ] :=>
                     TCon (TC "Integer" Star) "prelude")
                  (Area (Loc 5 1 6) (Loc 6 1 7))
                  (LNum "3"))
               True)
        ]
    , atypedecls = []
    , ainterfaces = []
    , ainstances = []
    , apath = Just "path"
    }