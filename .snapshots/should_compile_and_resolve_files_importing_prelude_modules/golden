// file: /root/project/prelude/__internal__/List.mad
import {} from "./../__internals__.mjs"
export let map = (f => xs =>  xs.map(f) );
export default { map };
// file: /root/project/src/Main.mad
import {} from "./../__internals__.mjs"
import L from "./../.prelude/List.mjs";

let main = (_ => {
    L.map((x => (x * 2)))(({ v: 1, n: { v: 2, n: { v: 3, n: null } } }));
    return ({ __constructor: "Unit", __args: [] });
});
export default {};
const makeArgs = () => {
  let list = {}
  let start = list
  Object.keys(process.argv.slice(0)).forEach((key) => {
    list = list.n = { v: process.argv[key], n: null }
  }, {})
  return {
    n: start.n.n.n,
    v: start.n.n.v
  }
}
main(makeArgs())
