( AST
    { aimports = []
    , aexps =
        [ Typed
            ([] :=> TVar (TV "-" Star))
            (Area (Loc 0 1 1) (Loc 67 4 2))
            (Where
               (Typed
                  ([] :=> TVar (TV "a" Star))
                  (Area (Loc 6 1 7) (Loc 7 1 8))
                  (LNum "3"))
               [ Typed
                   ([] :=> TVar (TV "-" Star))
                   (Area (Loc 13 2 3) (Loc 38 2 28))
                   (Is
                      (Typed
                         ([] :=> TVar (TV "-" Star))
                         (Area (Loc 13 2 3) (Loc 33 2 23))
                         (PCon
                            "LoggedIn"
                            [ Typed
                                ([] :=> TVar (TV "-" Star))
                                (Area (Loc 22 2 12) (Loc 29 2 19))
                                (PCon "Integer" [])
                            , Typed
                                ([] :=> TVar (TV "-" Star))
                                (Area (Loc 31 2 21) (Loc 32 2 22))
                                (PVar "x")
                            ]))
                      (Typed
                         ([] :=> TVar (TV "-" Star))
                         (Area (Loc 37 2 27) (Loc 38 2 28))
                         (Var "x" False)))
               , Typed
                   ([] :=> TVar (TV "-" Star))
                   (Area (Loc 41 3 3) (Loc 65 3 27))
                   (Is
                      (Typed
                         ([] :=> TVar (TV "-" Star))
                         (Area (Loc 41 3 3) (Loc 60 3 22))
                         (PCon
                            "LoggedIn"
                            [ Typed
                                ([] :=> TVar (TV "-" Star))
                                (Area (Loc 50 3 12) (Loc 56 3 18))
                                (PCon "String" [])
                            , Typed
                                ([] :=> TVar (TV "-" Star))
                                (Area (Loc 58 3 20) (Loc 59 3 21))
                                (PVar "x")
                            ]))
                      (Typed
                         ([] :=> TVar (TV "-" Star))
                         (Area (Loc 64 3 26) (Loc 65 3 27))
                         (Var "x" False)))
               ])
        ]
    , atypedecls = []
    , ainterfaces = []
    , ainstances = []
    , apath = Just "Module.mad"
    }
, []
, [ CompilationError
      (UnboundVariable "Integer")
      Context
        { ctxAstPath = "Module.mad"
        , ctxArea = Area (Loc 22 2 12) (Loc 29 2 19)
        }
  ]
)