#iftarget js

import { test, assertEquals, ErrorWithMessage } from "Test"
import { bad, mapRej, bichain } from "Wish"
import { always } from "Function"
import { TextData } from "Data"
import { createMockRequest, defaultConfig } from "MockRequest"
import { get, BadResponse } from "./Http"


test("get should return a good Wish containing the response when the server responds with 200", (_) => pipe(
  mapRej(ErrorWithMessage),
  map(always("http://localhost:8000/")),
  chain(pipe(
    get,
    mapRej(always(ErrorWithMessage("get should have worked"))),
    chain(pipe(.body, assertEquals($, "Success")))
  ))
)(createMockRequest(defaultConfig)))

test("get should return a bad Wish containing the error response when the server responds with 404", (_) => pipe(
  mapRej(ErrorWithMessage),
  map(always("http://localhost:8001/")),
  chain(pipe(
    get,
    bichain(
      where {
        BadResponse(response) =>
          pipe(.body, assertEquals($, "Not found"))(response)

        _ =>
          bad(ErrorWithMessage("Error should be BadRequest"))
      },
      always(bad(ErrorWithMessage("get should not be successful when the request fails")))
    )
  ))
)(createMockRequest({
  ...defaultConfig,
  port: 8001,
  statusCode: 404,
  response: TextData("Not found")
})))

#endif
