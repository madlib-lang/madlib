#iftarget js
import Context from "HitPointContext"

export type HitPoint
  = FunctionHit(String, String)
  | LineHit(String, Integer)


emptyHitPoints = []

pushHitPoint :: a -> List a -> List a
pushHitPoint = (a, list) => [a, ...list]


#-
let __HIT_POINTS = emptyHitPoints
let __CACHE = {}
global.__hp = (astPath, type, line, id) => {
  const context = Context.getContext();
  if (!context.id) {
    if (!__CACHE[astPath]) { __CACHE[astPath] = {} }
    if (__CACHE[astPath][id]) { return }
    __CACHE[astPath][id] = true

    if (type === "function") {
      __HIT_POINTS = pushHitPoint(FunctionHit(astPath)(id))(__HIT_POINTS)
    }
    else if (type === "line") {
      __HIT_POINTS = pushHitPoint(LineHit(astPath)(line))(__HIT_POINTS)
    }
  } else {
    if (!context.__CACHE[astPath]) { context.__CACHE[astPath] = {} }
    if (context.__CACHE[astPath][id]) { return }
    context.__CACHE[astPath][id] = true

    if (type === "function") {
      __HIT_POINTS = pushHitPoint(FunctionHit(astPath)(id))(__HIT_POINTS)
    }
    else if (type === "line") {
      __HIT_POINTS = pushHitPoint(LineHit(astPath)(line))(__HIT_POINTS)
    }
  }
}

global.__getGlobalHPs = () => __HIT_POINTS
-#

#endif
