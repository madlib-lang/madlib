import { assertEquals, test } from "Test"
import { Just, Nothing } from "Maybe"

import { loop, maybeLoop, while } from "./Control"


test("while", () => {
  x = 0
  while(() => {
    x = x + 1
    return x != 5
  })

  return assertEquals(x, 5)
})

test("loop", () => {
  expected = 16
  actual = loop(1, (x) => x < 10, (x) => x * 2)

  return assertEquals(actual, expected)
})

test("maybeLoop", () => {
  expected = 16
  actual = maybeLoop(
    1,
    (x) => x < 10
      ? Just(x * 2)
      : Nothing
  )

  return assertEquals(actual, expected)
})
