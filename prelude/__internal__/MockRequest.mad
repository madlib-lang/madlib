#iftarget js

import type { Method } from "Http"
import type { Wish } from "Wish"
import type { Data } from "Data"

import { methodStr, GET } from "Http"
import { good, Wish } from "Wish"
import { TextData } from "Data"

unit :: {}
unit = {}

#- import http from "http" -#

export alias MockRequestConfig = {
  path       :: String,
  port       :: Integer,
  method     :: Method,
  response   :: Data,
  statusCode :: Integer
}

defaultConfig :: MockRequestConfig
export defaultConfig = {
  path: "/",
  port: 8000,
  method: GET,
  response: TextData("Success"),
  statusCode: 200
}

createMockRequest :: MockRequestConfig -> Wish String {}
export createMockRequest = (config) => Wish((badCB, goodCB) => #-{
  const host = 'localhost'
  const port = config.port
  const method = methodStr(config.method)
  const path = config.path

  const requestListener = function (req, res) {
    let error = false
    if (req.method !== method) {
      res.writeHead(405) // method not allowed
      error = true
    } else if (req.url !== path) {
      res.writeHead(404)
      error = true
    }

    if (error) {
      res.end()
      server.close()
    } else {
      res.writeHead(config.statusCode)
      res.end(config.response.__args[0])
      server.close()
    }
  };

  const server = http.createServer(requestListener)

  server.on("error", (err) => badCB(err.message))

  server.listen(port, host, () => goodCB(unit))

}-#)

#endif
