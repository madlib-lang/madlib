import type { Wish } from "Wish"
import type { CommandResult } from "Process"
import type { Response, Error } from "Http"
import type { IOError } from "IOError"

import File from "File"
import Directory from "Directory"
import { exec } from "Process"
import { getBytes } from "Http"


export alias Config = {
  readFile :: String -> Wish IOError String,
  writeFile :: String -> String -> Wish IOError {},
  writeBytes :: String -> ByteArray -> Wish IOError {},
  readDir :: String -> Wish IOError (List String),
  exec :: String -> Wish CommandResult CommandResult,
  exists :: String -> Wish {} Boolean,
  getBytes :: String -> Wish (Error ByteArray) (Response ByteArray),
}

defaultConfig :: Config
export defaultConfig = {
  readFile: File.read,
  writeFile: File.write,
  writeBytes: File.writeBytes,
  readDir: Directory.read,
  exec,
  exists: File.exists,
  getBytes
}
