name: 'Release windows'

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release ( ex: v0.0.1 )'
        required: true

env:
  node-version: 14.x

jobs:
  release:
    runs-on: windows-2019
    steps:
      - name: Checkout madlib
        uses: actions/checkout@v2

      - name: Install Haskell tools
        run: |
          choco install ghc --version 8.10.7 -m -r
          choco install haskell-stack --version 2.7.3 -m -r
          choco install cabal --version 3.4.0.0 -m -r

      - name: Configure stack
        run: stack config set system-ghc --global true

      - name: Clone LLVM
        uses: actions/checkout@v2
        with:
          repository: llvm/llvm-project
          path: './llvm-project'
          fetch-depth: 0

      - name: Checkout LLVM 9.0.1
        run: |
          cd llvm-project
          git checkout tags/llvmorg-9.0.1

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            git
            mingw-w64-x86_64-curl
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-gcc-libs
            mingw-w64-x86_64-libffi
            mingw-w64-x86_64-libxml2
            mingw-w64-x86_64-zlib
            mingw-w64-x86_64-libc++
            mingw-w64-x86_64-libc++abi
            mingw-w64-x86_64-libunwind
            groff
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-python
            mingw-w64-x86_64-python-sphinx
            mingw-w64-x86_64-z3
            tar
            base-devel
            make
            autoconf
            libtool

      - name: Build LLVM
        run: |
          # download ghc build 8.10.7 for win64
          curl https://downloads.haskell.org/\~ghc/8.10.7/ghc-8.10.7-x86_64-unknown-mingw32.tar.xz --output ghc.tar.xz

          # extract
          tar -xvf ghc.tar.xz

          MINGW_FROM_GHC_PATH="$(pwd)/ghc-8.10.7/mingw/bin"

          export PATH="$MINGW_FROM_GHC_PATH:$PATH"

          mkdir /c/llvm-build
          cd llvm-project/llvm
          cmake -S . -B /c/llvm-build -G "MSYS Makefiles" -DCMAKE_CXX_FLAGS="-static" -DLLVM_BUILD_BENCHMARKS="OFF" -DLLVM_INCLUDE_BENCHMARKS="OFF" -DLLVM_INCLUDE_EXAMPLES="OFF" -DLLVM_INCLUDE_TESTS="OFF" -DCXX_STANDARD_REQUIRED="ON" -DCXX_EXTENSIONS="OFF" -DCMAKE_INSTALL_PREFIX:PATH="/c/Program Files/LLVM" -DCMAKE_BUILD_TYPE="Release" -DLLVM_OPTIMIZED_TABLEGEN="ON" -DLLVM_TARGETS_TO_BUILD="X86"
          cmake --build /c/llvm-build
          cmake --build /c/llvm-build --target install
        shell: msys2 {0}

      - name: Zip LLVM build
        run: 7z a llvm.zip "c:\Program Files\LLVM\*"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: llvm
          path: llvm.zip

      - name: Update paths
        run: |
          echo "PATH=c:\Program Files\LLVM\bin;c:\msys64\mingw64\bin;D:\a\_temp\msys64\mingw64\bin;$env:PATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.node-version }}

      - name: Install rollup
        run: npm i -g rollup @rollup/plugin-node-resolve

      - name: Install happy and alex
        run: stack install alex happy

      - run: |
          stack build -v --flag madlib:static
          stack run -- --help

      - name: Build tools
        run: ./scripts/build
        shell: msys2 {0}
        env:
          MSYS2_PATH_TYPE: inherit

      - name: Copy executable
        run: cp "$(stack path --dist-dir)/build/madlib/madlib.exe" ./
        shell: msys2 {0}
        env:
          MSYS2_PATH_TYPE: inherit

      - name: Upload executable
        uses: actions/upload-artifact@v2
        with:
          name: madlib.exe
          path: madlib.exe

